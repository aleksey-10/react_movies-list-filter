{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchField/SearchField.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","checkMatches","str","sub","RegExp","test","SearchField","query","handleOnChange","moviesFromServer","htmlFor","type","id","placeholder","value","onChange","event","target","filter","App","state","filterMovies","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"swEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBJK,EAAe,SAACC,EAAKC,GAGzB,OAFgB,IAAIC,OAAOD,EAAK,KAEjBE,KAAKH,IAGhBI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,iBAA1B,OAClB,yBAAKnB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOoB,QAAQ,eAAepB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEqB,KAAK,OACLC,GAAG,eACHtB,UAAU,QACVuB,YAAY,mBACZC,MAAOP,EACPQ,SAAU,SAACC,GAAW,IACZF,EAAUE,EAAMC,OAAhBH,MAEFlB,EAASa,EAAiBS,QAAO,SAAApB,GAAK,OAC1CG,EAAaH,EAAMZ,MAAO4B,IACvBb,EAAaH,EAAMX,YAAa2B,MAGrCN,EAAeM,EAAOlB,UCzBrBuB,EAAb,4MACEC,MAAQ,CACNb,MAAO,GACPX,OAAO,YAAKa,IAHhB,EAMEY,aAAe,SAACd,EAAOX,GACrB,EAAK0B,SAAS,CACZf,QACAX,YATN,uDAcI,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEiB,MAAOgB,KAAKH,MAAMb,MAClBC,eAAgBe,KAAKF,aACrBZ,iBAAkBA,IAEpB,kBAAC,EAAD,CAAYb,OAAQ2B,KAAKH,MAAMxB,UAEjC,yBAAKN,UAAU,WAAf,0BAxBR,GAAyBkC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4100bf2e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst checkMatches = (str, sub) => {\n  const pattern = new RegExp(sub, 'i');\n\n  return pattern.test(str);\n};\n\nconst SearchField = ({ query, handleOnChange, moviesFromServer }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          value={query}\n          onChange={(event) => {\n            const { value } = event.target;\n\n            const movies = moviesFromServer.filter(movie => (\n              checkMatches(movie.title, value)\n              || checkMatches(movie.description, value)\n            ));\n\n            handleOnChange(value, movies);\n          }}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport { SearchField };\n\nSearchField.propTypes = {\n  query: PropTypes.string.isRequired,\n  handleOnChange: PropTypes.func.isRequired,\n  moviesFromServer: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchField } from './components/SearchField/SearchField';\n\nexport class App extends Component {\n  state = {\n    query: '',\n    movies: [...moviesFromServer],\n  };\n\n  filterMovies = (query, movies) => {\n    this.setState({\n      query,\n      movies,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchField\n            query={this.state.query}\n            handleOnChange={this.filterMovies}\n            moviesFromServer={moviesFromServer}\n          />\n          <MoviesList movies={this.state.movies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}